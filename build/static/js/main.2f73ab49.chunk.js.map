{"version":3,"sources":["assets/img/close_icon.svg","assets/img/delete_icon.svg","components/GallaryDropzone.js","components/GallaryForm.js","components/GallaryItem.js","components/Gallary.js","components/GallaryFullItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseStyle","flex","display","flexDirection","alignItems","justifyContent","padding","marginTop","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","activeStyle","acceptStyle","rejectStyle","GallaryDropzone","filesHandler","filesCount","useDropzone","accept","onDrop","files","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","className","GallaryForm","submitForm","useState","path","setPath","file","setFile","countFile","setCountFile","htmlFor","type","id","value","onChange","e","target","paths","length","i","reader","FileReader","test","readAsDataURL","readAsText","onload","result","newResult","url","width","height","push","some","Object","values","JSON","parse","map","item","console","log","onClick","submitHandler","GallaryItem","photo","itemClick","itemDelete","src","alt","onError","Gallary","photos","deleteItem","idx","key","GallaryFullItem","closeItem","useEffect","listener","window","addEventListener","removeEventListener","deleteIcon","title","closeIcon","App","setPhotos","isFull","full","setFull","gallaryItemDelete","newPhotos","filter","document","body","removeAttribute","preventDefault","overflow","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f73ab49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close_icon.17486a4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_icon.9adcbde2.svg\";","import React, { useMemo } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"flex-start\",\r\n  justifyContent: \"center\",\r\n  padding: \"20px\",\r\n  marginTop: \"10px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2dc0c5\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nexport const GallaryDropzone = ({ filesHandler, filesCount }) => {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/*, application/json\",\r\n    onDrop: (files) => filesHandler(files),\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  return (\r\n    <div className=\"form-loading__inner\">\r\n      <p>Или выберите на своем устройстве</p>\r\n      <div {...getRootProps({ style })}>\r\n        <input {...getInputProps()} />\r\n        <p>Перетащите нужные файлы или кликните для выбора</p>\r\n        <p>Файлов выбрано: {filesCount}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { GallaryDropzone } from \"./GallaryDropzone\";\r\n\r\nexport const GallaryForm = ({ submitForm }) => {\r\n  const [path, setPath] = useState(\"\");\r\n  const [file, setFile] = useState([]);\r\n  const [countFile, setCountFile] = useState(0);\r\n\r\n  const submitHandler = (e) => {\r\n    if (path !== \"\") {\r\n      submitForm([{ url: path, width: \"auto\", height: \"auto\" }, ...file], e);\r\n      setFile([]);\r\n      setPath(\"\");\r\n      setCountFile(0);\r\n      return;\r\n    }\r\n\r\n    submitForm(file, e);\r\n    setFile([]);\r\n    setCountFile(0);\r\n  };\r\n\r\n  const fileHandler = (files) => {\r\n    const paths = [];\r\n\r\n    setCountFile(files.length);\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      let reader = new FileReader();\r\n      if (/image.*/.test(files[i].type)) {\r\n        reader.readAsDataURL(files[i]);\r\n      } else if (/application.json/.test(files[i].type)) {\r\n        reader.readAsText(files[i]);\r\n      }\r\n      reader.onload = () => {\r\n        const result = reader.result;\r\n        if (/image.*/.test(files[i].type)) {\r\n          const newResult = {\r\n            url: result,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n          };\r\n          paths.push(newResult);\r\n        } else if (/application.json/.test(files[i].type)) {\r\n          const some = [];\r\n          Object.values(JSON.parse(result)).map((item) => some.push(...item));\r\n          console.log(some);\r\n          paths.push(...some);\r\n        }\r\n      };\r\n    }\r\n    setFile(paths);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-loading\">\r\n      <div className=\"form-loading__inner\">\r\n        <label htmlFor=\"input-path\">Введите путь до картинки</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"input-path\"\r\n          className=\"form-loading__input\"\r\n          value={path}\r\n          onChange={(e) => setPath(e.target.value)}\r\n          className=\"form-loading__input\"\r\n          placeholder=\"Введите URL картинки\"\r\n        />\r\n      </div>\r\n      <GallaryDropzone filesHandler={fileHandler} filesCount={countFile} />\r\n      <button onClick={(e) => submitHandler(e)} className=\"form-loading__btn\">\r\n        Загрузить\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const GallaryItem = ({ photo, itemClick, itemDelete }) => {\r\n  const loadHandler = () => {\r\n    itemDelete(photo.url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallary__item\" onClick={() => itemClick(photo.url)}>\r\n      <img\r\n        src={photo.url}\r\n        alt={photo.url}\r\n        className=\"gallary__image\"\r\n        onError={() => loadHandler()}\r\n      />\r\n      <span className=\"gallary__descr\">Description</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GallaryItem } from \"./GallaryItem\";\r\n\r\nexport const Gallary = ({ photos, itemClick, deleteItem }) => {\r\n  if (!photos.length) {\r\n    return <p className=\"gallary__empty\">Изображений пока нет.</p>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"gallary\">\r\n      {photos.map((photo, idx) => (\r\n        <GallaryItem\r\n          photo={photo}\r\n          key={photo.url + idx}\r\n          itemClick={itemClick}\r\n          itemDelete={deleteItem}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport closeIcon from \"../assets/img/close_icon.svg\";\r\nimport deleteIcon from \"../assets/img/delete_icon.svg\";\r\n\r\nexport const GallaryFullItem = ({ closeItem, deleteItem, url }) => {\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        closeItem();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"gallary__full\">\r\n      <div className=\"gallary__inner\">\r\n        <img\r\n          src={deleteIcon}\r\n          alt=\"close_icon\"\r\n          className=\"gallary__delete\"\r\n          onClick={() => deleteItem(url)}\r\n          title=\"Удалить\"\r\n        />\r\n        <img\r\n          src={closeIcon}\r\n          alt=\"close_icon\"\r\n          className=\"gallary__close\"\r\n          onClick={() => closeItem()}\r\n          title=\"Закрыть\"\r\n        />\r\n      </div>\r\n      <img src={url} alt={url} className=\"gallary__image--width\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { GallaryForm } from \"./components/GallaryForm\";\nimport { Gallary } from \"./components/Gallary\";\nimport { GallaryFullItem } from \"./components/GallaryFullItem\";\n\n// import { galleryImages } from \"./photos.json\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n\n  const [full, setFull] = useState({\n    url: \"\",\n    isFull: false,\n  });\n\n  // useEffect(() => {\n  //   // console.log(galleryImages);\n  //   setPhotos(galleryImages);\n  // }, []);\n\n  function gallaryItemClick(url) {\n    document.body.style.overflow = \"hidden\";\n    setFull({ url, isFull: true });\n  }\n\n  function gallaryItemClose() {\n    document.body.removeAttribute(\"style\");\n    setFull({ url: \"\", isFull: false });\n  }\n\n  function gallaryItemDelete(url) {\n    const newPhotos = photos.filter((photo) => photo.url !== url);\n    document.body.removeAttribute(\"style\");\n    setPhotos(newPhotos);\n    setFull({ url: \"\", isFull: false });\n  }\n\n  const uploadImage = (file, e) => {\n    e.preventDefault();\n\n    if (!file.length) return;\n\n    setPhotos([...file, ...photos]);\n  };\n\n  return (\n    <div className=\"container\">\n      <GallaryForm submitForm={uploadImage} />\n      <Gallary\n        photos={photos}\n        itemClick={gallaryItemClick}\n        deleteItem={gallaryItemDelete}\n      />\n      {full.isFull && (\n        <GallaryFullItem\n          closeItem={gallaryItemClose}\n          deleteItem={gallaryItemDelete}\n          url={full.url}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}